# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-16 07:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('slug', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('author', models.CharField(blank=True, max_length=250)),
                ('publisher', models.CharField(blank=True, max_length=250)),
                ('date', models.CharField(blank=True, max_length=250)),
                ('place', models.CharField(blank=True, max_length=250)),
                ('URL', models.URLField(blank=True)),
                ('version', models.CharField(blank=True, max_length=250)),
                ('checked', models.DateField(blank=True, null=True)),
                ('source_type', models.CharField(blank=True, choices=[('WEBSITE', 'website'), ('BOOK', 'book'), ('ARCHIVE', 'archive')], max_length=250)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='record',
            name='sources',
            field=models.ManyToManyField(blank=True, to='base.Source'),
        ),
    ]
