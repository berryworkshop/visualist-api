SnippetSchema:
    text:
        type: string
        required: true

# relations:
#   - has_source (Work)
#   - has_license (License)

BaseSchema: &Base
    slug:
        unique: true
        type: string
        required: true
# relations:
#   - has_description (Snippet)
# calculated:
# - date
# - url

LicenseSchema:
    <<: *Base
    name:
        unique: true
        type: string
    text:
        type: string
    url:
        unique: true
        type: string
        required: true

RecordSchema: &Record
    <<: *Base
    name:
        type: string
        required: true
    description:
        type: string
    featured:
        type: boolean
        required: true
        default: false
    approved:
        type: boolean
        required: true
        default: false
    public:
        type: boolean
        required: true
        default: false
    categories:
        type: list
        schema:
            type: string
    same_as:
        type: string
        unique: true
    identifiers:
        type: dict
        unique: true
        schema:
            vocabulary:
                type: string
                required: true
                default: AAT
                allowed:
                    - AAT
                    - ULAN
                    - LCCN
                    - VIAF
            value:
                type: string
                required: true
# relations
# - has_source (Work)
# - has_tag (Tag)
# - has_image (Image)
#   - aspect
#     - main
#     - detail
#     - recto
#     - verso
#     - signature
# - is_next_iteration_of (Record)
# calculated:
# - citation
# - date

WorkSchema:
    <<: *Record
    categories:
        type: list
        schema:
            type: string
            allowed:
              - article
              - book
              - installation
              - photograph
              - sculpture
              - visual artwork
              - website
    work_date_created:
        type: datetime
    work_date_modified:
        type: datetime
    work_date_published:
        type: datetime
    work_version:
        type: string
    url:
        type: string
# relations:
# - has_license (License)
# - created_at (Place)
# - located_at (Place)
# - created_by (Person/Organization)
# - part_of (Work)
# calculated:
# - date
# - distance

PageSchema:
    <<: *Record
    text:
        type: string
    categories:
        type: list
        schema:
            type: string
            allowed:
              - standard
              - article
              - review
# relations:
#   - child_of (Page/Collection)
# calculated:
#   - date
#   - same_as

CollectionSchema:
    <<: *Record
    categories:
        type: list
        schema:
            type: string
            allowed:
              - standard
              - tour
# relations:
#   - has_record (Record)
#   - child_of (Page/Collection)
# calculated:
#   - date
#   - same_as

TagSchema:
    <<: *Record
    categories:
        type: list
        schema:
            type: string
            allowed:
              - genre
              - medium
              - period
              - technique
# relations:
#   - vocabulary (Work)
#   - has_icon (Image)



EntitySchema: &Entity
    <<: *Record
    emails:
        type: list
        schema:
            type: dict
            schema:
                label:
                    type: string
                    default: primary
                address:
                    required: true
                    unique: true
                    type: string
    phones:
        type: list
        schema:
            type: dict
            schema:
                country:
                    type: integer
                    required: true
                    default: 1
                area_code:
                    type: integer
                    required: true
                exchange_code:
                    type: integer
                    required: true
                number:
                    type: integer
                    required: true
                extension:
                    type: integer
    social:
        type: list
        schema:
            type: dict
            schema:
                service:
                    required: true
                    type: string
                    allowed:
                        Ask.fm
                        Facebook
                        Flickr
                        Foursquare
                        GitHub
                        Google+
                        Instagram
                        LinkedIn
                        Meetup
                        Pinterest
                        Reddit
                        SnapChat
                        Tumblr
                        Twitter
                        Vine
                        WhatsApp
                        Yelp
                        YouTube
                account:
                    required: true
                    type: string

EventSchema:
    <<: *Entity
    categories:
        allowed:
          - course
          - exhibition
          - performance
          - reception
          - residency
          - workshop
    date_start:
        type: datetime
    date_end:
        type: datetime
    status:
        default: OK
        required: true
        allowed:
            - OK
            - cancelled
    group_friendly:
        type: boolean
        required: true
        default: true
# relations:
#   - has_venue (Place)
#   - organized_by (Person/Organization)
#   - curated_by (Person/Organization)
#   - produced_by (Person/Organization)
#   - contributed_to_by (Person/Organization)
#   - exhibited_at_by (Person/Organization)
#   - part_of (Event)
# calculated:
#   - date
#   - duration
#   - distance

PersonSchema:
    <<: *Entity
    name:
        type: dict
        required: true
        schema:
            last:
                type: string
                required: true
            first:
                type: string
    categories:
        type: list
        schema:
            type: string
            allowed:
                - artist
                - writer
                - architect
                - filmmaker
                - curator
                - gallerist
                - professor
    date_born:
        type: datetime
    date_died:
        type: datetime
    gender:
        type: string
        allowed:
            - male
            - female
            - other
    nationalities:
        type: list
        schema:
            type: string
            default: American
            # allowed:
                # - American
                # - Canadian
                # - Mexican
# relations:
#   - has_address (Place)
#   - has_email (Email)
#   - has_phone (Phone)
#   - has_social_account (SocialAccount)
#   - born_at (Place)
#   - died_at (Place)
#   - represented_by (Person/Organization)
#   - employed_by (Person/Organization)
#   - member_of (Organization)
#   - friend_of (Person)
#   - child_of (Person)

OrganizationSchema:
    <<: *Entity
    categories:
        type: list
        schema:
            type: string
            allowed:
              - archive
              - association
              - company
              - consortium
              - foundation
              - library
              - museum
              - school
    date_founded:
        type: datetime
    date_dissolved:
        type: datetime
    nonprofit:
        type: boolean
        default: true
        required: true
    appointment_only:
        type: boolean
        default: false
        required: true
    hours:
        type: string
# relations:
#   - has_address (Place)
#   - has_email (Email)
#   - has_logo (Image)
#   - has_phone (Phone)
#   - has_social_account (SocialAccount)
#   - founded_at (Place)
#   - founded_by (Person)
#   - member_of (Organization)
#   - part_of (Organization)
# calculated:
#   - distance
#   - date

PlaceSchema:
    <<: *Entity
    categories:
        type: list
        schema:
            type: string
            allowed:
                - spot
                - area
                - island
                - neighborhood
                - city
                - county
                - region
                - state
                - country
    location:
        type: point
        unique: true
    polygons:
        type: multipolygon
    address:
        unique: true
        type: dict
        schema:
            street:
                type: string
            locality:
                type: string
                default: Chicago
            region:
                type: string
                default: IL
                # allowed:
                #     - IL
                #     - IN
                #     - MI
                #     - WI
                #     - etc. (ISO 3166-2:US)
            postal_code:
                type: string
            country:
                type: string
                default: US
                # allowed:
                #     - US
                #     - CA
                #     - MX
                #     - etc. (ISO 3166-2)
# relations:
#   - part_of (Place)
# calculated:
#   - address
#   - geo
#   - distance



UserSchema:
    <<: *Base
    username:
        type: string
        unique: true
        required: true
    password_hash:
        type: string
        required: true
# relations:
#   - has_role (Role)
#   - has_email (Email)
#   - same_as (Person)
#   - has_avatar (Image)
#   - has_permission (Permission)
#   - has_social_account (SocialAccount)
#   - has_favorite (Record)
#   - has_plans_to_visit (Record)
#     - status
#   - member_of (Organization)
#   - authored (Record)
#     - timestamp
#   - modified (Record)
#     - timestamp
# calculated:
#   - name


# ImageSchema:
#     <<: *Base
#     caption:
#         type: string
#     pixels_x:
#         type: integer
#         required: true
#     pixels_y:
#         type: integer
#         required: true
#     file_format:
#         type: list
#         required: true
#         schema:
#             type: string
#             default: jpg
#             allowed:
#               - jpg
#               - jp2
#               - png
#               - tiff
#               - svg
#     checksum:
#         type: string
  # relations:
  #   - has_source (Work)
  #   - has_license (License)
  # calculated:
  #   - date
  #   - same_as


# RoleSchema:
#     <<: *Base
#     name:
#         required: true
#         unique: true
#         type: string
            # Admin
            # Manager
            # Contributor
            # Member
            # Anonymous
# relations:
#   - has_permission (Permission)


# PermissionSchema:
#     <<: *Base
#     model:
#         required: true
#         type: string
#         default: event
#         allowed:
#             - collection
#             - event
#             - image
#             - organization
#             - page
#             - person
#             - place
#             - site
#             - user
#             - work
#     permissions:
#         required: true
#         type: list
#         default: read
#         allowed:
#             - read
#             - write
#             - update
#             - destroy
#             - mark private
#             - mark favorite
#             - mark featured
#     owner:
#         required: true
#         default: own
#         type: list
#         allowed:
#             - own
#             - others
#             - others private
  # calculated:
  #   - description
